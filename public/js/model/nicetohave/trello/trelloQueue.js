// Generated by CoffeeScript 1.6.1
(function() {
  var Snitch, TrelloQueue, Wrapped, _base, _ref, _ref1,
    _this = this;

  if ((_ref = window.nicetohave) == null) {
    window.nicetohave = {};
  }

  if ((_ref1 = (_base = window.nicetohave).trello) == null) {
    _base.trello = {};
  }

  Snitch = (function() {

    function Snitch(callback) {
      this.callback = callback;
    }

    return Snitch;

  })();

  Wrapped = (function() {

    function Wrapped(trello) {
      var _this = this;
      this.trello = trello;
      this.get = function(path, hash, success, failure) {
        return Wrapped.prototype.get.apply(_this, arguments);
      };
    }

    Wrapped.prototype.get = function(path, hash, success, failure) {
      var snitchFn,
        _this = this;
      snitchFn = function(arg) {
        if (!arg) {
          console.log("get: " + path + "," + hash + ": callback arg is null!");
        }
        if (typeof arg === "undefined") {
          console.log("get: " + path + "," + hash + ": callback arg is not defined!");
        }
        return success(arg);
      };
      return this.trello.get(path, hash, snitchFn, failure);
    };

    return Wrapped;

  })();

  TrelloQueue = (function() {

    function TrelloQueue(trello) {
      var _this = this;
      this.trello = trello;
      this.post = function(path, hash, success, failure) {
        return TrelloQueue.prototype.post.apply(_this, arguments);
      };
      this.deauthorize = function() {
        return TrelloQueue.prototype.deauthorize.apply(_this, arguments);
      };
      this.authorize = function(arg) {
        return TrelloQueue.prototype.authorize.apply(_this, arguments);
      };
      this.boards = new Wrapped(this.trello.boards);
      this.lists = new Wrapped(this.trello.lists);
      this.cards = new Wrapped(this.trello.cards);
    }

    TrelloQueue.prototype.authorize = function(arg) {
      return this.trello.authorize(arg);
    };

    TrelloQueue.prototype.deauthorize = function() {
      return this.trello.deauthorize();
    };

    TrelloQueue.prototype.post = function(path, hash, success, failure) {
      var snitchFn,
        _this = this;
      snitchFn = function(arg) {
        if (!arg) {
          console.log("post: " + path + "," + hash + ": callback arg is null!");
        }
        if (typeof arg === "undefined") {
          console.log("post: " + path + "," + hash + ": callback arg is not defined!");
        }
        return success(arg);
      };
      return this.trello.post(path, hash, snitchFn, failure);
    };

    return TrelloQueue;

  })();

  window.nicetohave.trello.TrelloQueue = TrelloQueue;

}).call(this);
