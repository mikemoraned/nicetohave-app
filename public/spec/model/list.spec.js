// Generated by CoffeeScript 1.4.0
(function() {

  describe('List', function() {
    describe('initial state', function() {
      it('cannot be created without an id', function() {
        return expect(function() {
          return new nicetohave.List();
        }).toThrow({
          message: "Not a valid list id: 'undefined'"
        });
      });
      it('must only accept an id of the right format (alphanumeric)', function() {
        return expect(function() {
          return new nicetohave.List("  csdc  scd");
        }).toThrow({
          message: "Not a valid list id: '  csdc  scd'"
        });
      });
      it('must only accept an id of the right length (24)', function() {
        return expect(function() {
          return new nicetohave.List("4eea503d91e31d174600");
        }).toThrow({
          message: "Not a valid list id: '4eea503d91e31d174600'"
        });
      });
      it('has an empty name', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.name()).toBe("");
      });
      it('has an id', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.id()).toBe("4eea503d91e31d174600008f");
      });
      return it('has a created load status', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.loadStatus()).toBe("created");
      });
    });
    return describe('loading', function() {
      var trello;
      trello = null;
      beforeEach(function() {
        trello = {
          lists: {
            get: function(path, params, successFn, errorFn) {}
          }
        };
        return spyOn(trello.lists, 'get').andCallFake(function(path, params, successFn, errorFn) {
          if (path === '4eea503d91e31d174600008f') {
            return successFn({
              name: "A dummy name"
            });
          } else {
            return successFn(commentsResponse);
          }
        });
      });
      it('when asked to load, loads name', function() {
        var list, privilige;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("4eea503d91e31d174600008f", privilige);
        list.load();
        expect(trello.lists.get).toHaveBeenCalled();
        return expect(list.name()).toEqual("A dummy name");
      });
      return it('when asked to load, loads cards', function() {
        var list, privilige;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("4eea503d91e31d174600008f", privilige);
        list.load();
        return expect(list.cards().length).toEqual(1);
      });
    });
  });

}).call(this);
