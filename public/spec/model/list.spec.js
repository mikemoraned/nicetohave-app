// Generated by CoffeeScript 1.6.1
(function() {

  describe('List', function() {
    describe('initial state', function() {
      it('cannot be created without an id', function() {
        return expect(function() {
          return new nicetohave.List();
        }).toThrow({
          message: "Not a valid list id: 'undefined'"
        });
      });
      it('must only accept an id of the right format (alphanumeric)', function() {
        return expect(function() {
          return new nicetohave.List("  csdc  scd");
        }).toThrow({
          message: "Not a valid list id: '  csdc  scd'"
        });
      });
      it('must only accept an id of the right length (24)', function() {
        return expect(function() {
          return new nicetohave.List("4eea503d91e31d174600");
        }).toThrow({
          message: "Not a valid list id: '4eea503d91e31d174600'"
        });
      });
      it('has an empty name', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.name()).toBe("");
      });
      it('has an id', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.id()).toBe("4eea503d91e31d174600008f");
      });
      return it('has a created load status', function() {
        var list;
        list = new nicetohave.List("4eea503d91e31d174600008f");
        return expect(list.loadStatus()).toBe("created");
      });
    });
    return describe('loading', function() {
      var cardsResponse, listResponse, trello;
      trello = null;
      beforeEach(function() {
        trello = {
          lists: {
            get: function(path, params, successFn, errorFn) {}
          }
        };
        spyOn(trello.lists, 'get').andCallFake(function(path, params, successFn, errorFn) {
          if (path === '50f5c98fe0314ccd5500a51d') {
            return successFn(listResponse);
          } else {
            if (path === '50f5c98fe0314ccd5500a51d/cards') {
              return successFn(cardsResponse);
            }
          }
        });
        return spyOn(nicetohave.Card.prototype, "load");
      });
      it('when asked to load, loads name', function() {
        var list, privilige;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("50f5c98fe0314ccd5500a51d", privilige);
        list.load();
        expect(trello.lists.get).toHaveBeenCalled();
        return expect(list.name()).toEqual("Doing");
      });
      it('when asked to load, loads cards with ids', function() {
        var list, privilige;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("50f5c98fe0314ccd5500a51d", privilige);
        expect(list.loadStatus()).toEqual("created");
        list.load();
        expect(list.loadStatus()).toEqual("load-success");
        expect(trello.lists.get).toHaveBeenCalled();
        expect(list.cards().length).toEqual(3);
        expect(list.cards()[0].id()).toEqual("510557f3e002eb8d56002e04");
        expect(list.cards()[1].id()).toEqual("5105af6108fa2a6e21000dc5");
        return expect(list.cards()[2].id()).toEqual("5122b28d00e3df314d005722");
      });
      it('when asked to load twice, re-use existing card objects for same id', function() {
        var card1, card2, card3, list, privilige, _ref;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("50f5c98fe0314ccd5500a51d", privilige);
        expect(list.loadStatus()).toEqual("created");
        list.load();
        expect(list.loadStatus()).toEqual("load-success");
        expect(trello.lists.get).toHaveBeenCalled();
        expect(list.cards().length).toEqual(3);
        expect(list.cards()[0].id()).toEqual("510557f3e002eb8d56002e04");
        expect(list.cards()[1].id()).toEqual("5105af6108fa2a6e21000dc5");
        expect(list.cards()[2].id()).toEqual("5122b28d00e3df314d005722");
        _ref = list.cards(), card1 = _ref[0], card2 = _ref[1], card3 = _ref[2];
        list.load();
        expect(list.cards().length).toEqual(3);
        expect(list.cards()[0]).toBe(card1);
        expect(list.cards()[1]).toBe(card2);
        return expect(list.cards()[2]).toBe(card3);
      });
      it('when asked to load, call load on Card', function() {
        var list, privilige;
        privilige = new nicetohave.Privilege(trello);
        privilige.level(nicetohave.PrivilegeLevel.READ_ONLY);
        list = new nicetohave.List("50f5c98fe0314ccd5500a51d", privilige);
        expect(nicetohave.Card.prototype.load).not.toHaveBeenCalled();
        expect(list.loadStatus()).toEqual("created");
        list.load();
        expect(list.loadStatus()).toEqual("load-success");
        return expect(nicetohave.Card.prototype.load).toHaveBeenCalled();
      });
      listResponse = JSON.parse("{\"id\":\"50f5c98fe0314ccd5500a51d\",\n \"name\":\"Doing\",\n \"closed\":false,\n \"idBoard\":\"50f5c98fe0314ccd5500a51b\",\n \"pos\":32768}");
      return cardsResponse = JSON.parse("[\n    {\n       \"id\":\"510557f3e002eb8d56002e04\",\n       \"badges\":{\n          \"votes\":0,\n          \"viewingMemberVoted\":false,\n          \"subscribed\":false,\n          \"fogbugz\":\"\",\n          \"checkItems\":0,\n          \"checkItemsChecked\":0,\n          \"comments\":10,\n          \"attachments\":0,\n          \"description\":false,\n          \"due\":null\n       },\n       \"checkItemStates\":[\n\n       ],\n       \"closed\":false,\n       \"dateLastActivity\":\"2013-01-27T21:27:31.963Z\",\n       \"desc\":\"\",\n       \"due\":null,\n       \"idBoard\":\"50f5c98fe0314ccd5500a51b\",\n       \"idChecklists\":[\n\n       ],\n       \"idList\":\"50f5c98fe0314ccd5500a51d\",\n       \"idMembers\":[\n\n       ],\n       \"idMembersVoted\":[\n\n       ],\n       \"idShort\":1,\n       \"idAttachmentCover\":null,\n       \"manualCoverAttachment\":false,\n       \"labels\":[\n\n       ],\n       \"name\":\"Test card\",\n       \"pos\":65535,\n       \"shortUrl\":\"https://trello.com/c/MZkgftNb\",\n       \"subscribed\":false,\n       \"url\":\"https://trello.com/card/test-card/50f5c98fe0314ccd5500a51b/1\"\n    },\n    {\n       \"id\":\"5105af6108fa2a6e21000dc5\",\n       \"badges\":{\n          \"votes\":0,\n          \"viewingMemberVoted\":false,\n          \"subscribed\":false,\n          \"fogbugz\":\"\",\n          \"checkItems\":0,\n          \"checkItemsChecked\":0,\n          \"comments\":6,\n          \"attachments\":0,\n          \"description\":false,\n          \"due\":null\n       },\n       \"checkItemStates\":[\n\n       ],\n       \"closed\":false,\n       \"dateLastActivity\":\"2013-01-29T23:32:37.852Z\",\n       \"desc\":\"\",\n       \"due\":null,\n       \"idBoard\":\"50f5c98fe0314ccd5500a51b\",\n       \"idChecklists\":[\n\n       ],\n       \"idList\":\"50f5c98fe0314ccd5500a51d\",\n       \"idMembers\":[\n\n       ],\n       \"idMembersVoted\":[\n\n       ],\n       \"idShort\":2,\n       \"idAttachmentCover\":null,\n       \"manualCoverAttachment\":false,\n       \"labels\":[\n\n       ],\n       \"name\":\"Another test card with assignments\",\n       \"pos\":131071,\n       \"shortUrl\":\"https://trello.com/c/ZtpHkA0R\",\n       \"subscribed\":false,\n       \"url\":\"https://trello.com/card/another-test-card-with-assignments/50f5c98fe0314ccd5500a51b/2\"\n    },\n    {\n       \"id\":\"5122b28d00e3df314d005722\",\n       \"badges\":{\n          \"votes\":0,\n          \"viewingMemberVoted\":false,\n          \"subscribed\":false,\n          \"fogbugz\":\"\",\n          \"checkItems\":0,\n          \"checkItemsChecked\":0,\n          \"comments\":3,\n          \"attachments\":0,\n          \"description\":false,\n          \"due\":null\n       },\n       \"checkItemStates\":[\n\n       ],\n       \"closed\":false,\n       \"dateLastActivity\":\"2013-02-18T23:03:10.779Z\",\n       \"desc\":\"\",\n       \"due\":null,\n       \"idBoard\":\"50f5c98fe0314ccd5500a51b\",\n       \"idChecklists\":[\n\n       ],\n       \"idList\":\"50f5c98fe0314ccd5500a51d\",\n       \"idMembers\":[\n\n       ],\n       \"idMembersVoted\":[\n\n       ],\n       \"idShort\":3,\n       \"idAttachmentCover\":null,\n       \"manualCoverAttachment\":false,\n       \"labels\":[\n\n       ],\n       \"name\":\"Foop\",\n       \"pos\":196607,\n       \"shortUrl\":\"https://trello.com/c/pbhsBB5j\",\n       \"subscribed\":false,\n       \"url\":\"https://trello.com/card/foop/50f5c98fe0314ccd5500a51b/3\"\n    }\n]");
    });
  });

}).call(this);
